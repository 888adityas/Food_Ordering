{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Win10/Documents/GitHub/food_/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";// pass array of objects and the string you want to search for, in the custom hook;\nvar useFilter=function useFilter(arrOfObj,value){var filteredArray;if(value){filteredArray=arrOfObj.filter(function(item){return item.name.toLowerCase().includes(value.trim());});return{filteredArray:filteredArray};}else{filteredArray=_toConsumableArray(arrOfObj);return{filteredArray:filteredArray};}};export default useFilter;","map":{"version":3,"names":["useFilter","arrOfObj","value","filteredArray","filter","item","name","toLowerCase","includes","trim"],"sources":["C:/Users/Win10/Documents/GitHub/food_/src/store/use-filter.js"],"sourcesContent":["// pass array of objects and the string you want to search for, in the custom hook;\r\nconst useFilter = (arrOfObj, value) => {\r\n    let filteredArray;\r\n    if (value) {\r\n        filteredArray = arrOfObj.filter((item) => item.name.toLowerCase().includes(value.trim()));\r\n        return { filteredArray };\r\n    } else {\r\n        filteredArray = [...arrOfObj]\r\n        return { filteredArray };\r\n    }\r\n\r\n}\r\n\r\nexport default useFilter;"],"mappings":"mIAAA;AACA,GAAMA,UAAS,CAAG,QAAZA,UAAS,CAAIC,QAAQ,CAAEC,KAAK,CAAK,CACnC,GAAIC,cAAa,CACjB,GAAID,KAAK,CAAE,CACPC,aAAa,CAAGF,QAAQ,CAACG,MAAM,CAAC,SAACC,IAAI,QAAKA,KAAI,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACN,KAAK,CAACO,IAAI,EAAE,CAAC,GAAC,CACzF,MAAO,CAAEN,aAAa,CAAbA,aAAc,CAAC,CAC5B,CAAC,IAAM,CACHA,aAAa,oBAAOF,QAAQ,CAAC,CAC7B,MAAO,CAAEE,aAAa,CAAbA,aAAc,CAAC,CAC5B,CAEJ,CAAC,CAED,cAAeH,UAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}